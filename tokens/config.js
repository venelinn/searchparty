const customFileHeader = [
	"Do not edit directly â€” this is auto generated by style-dictionary",
	"Updates are made via ./tokens/*.json",
];

module.exports = {
	source: ["./tokens/**/*.json"],
	transform: {
		removeColorNamespace: {
			type: "name",
			transformer: token => token.path.filter((t, i) => !(i === 0 && t === "color")).join("-"),
		},
		pxToRem: {
			type: "value",
			matcher: token => /\d*\.?\d*px/i.test(token.value),
			transformer: token => {
				const floatVal = parseFloat(token.value);

				if (floatVal === 0) {
					return "0";
				}

				return `${floatVal / 16}rem`;
			},
		},
	},
	platforms: {
		scss: {
			buildPath: "styles/",
			transforms: [
				"attribute/cti",
				"name/cti/kebab",
				"time/seconds",
				"content/icon",
				"size/rem",
				"color/css",
				"removeColorNamespace",
				"pxToRem",
			],
			files: [
				{
					destination: "_css-variables.scss",
					format: "css/variables",
					options: {
						fileHeader: () => customFileHeader,
						outputReferences: true,
					},
				},
				{
					destination: "_base-variables.scss",
					format: "scss/variables",
					options: {
						fileHeader: () => customFileHeader,
						outputReferences: true,
					},
				},
			],
		},
		js: {
			buildPath: "./styles/",
			transforms: ["attribute/cti", "name/cti/pascal", "size/rem", "color/hex", "pxToRem"],
			files: [
				{
					destination: "variables.js",
					format: "javascript/es6",
					options: {
						fileHeader: () => customFileHeader,
						outputReferences: true,
					},
				},
			],
		},
	},
};
